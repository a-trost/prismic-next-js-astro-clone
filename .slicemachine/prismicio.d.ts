// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Navigation documents */
interface NavigationDocumentData {
    /**
     * Links field in *Navigation*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: navigation.links[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    links: prismicT.GroupField<Simplify<NavigationDocumentDataLinksItem>>;
}
/**
 * Item in Navigation → Links
 *
 */
export interface NavigationDocumentDataLinksItem {
    /**
     * Label field in *Navigation → Links*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: Optional - Label for the link
     * - **API ID Path**: navigation.links[].label
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    label: prismicT.RichTextField;
    /**
     * Link field in *Navigation → Links*
     *
     * - **Field Type**: Link
     * - **Placeholder**: Link for navigation item
     * - **API ID Path**: navigation.links[].link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    link: prismicT.LinkField;
}
/**
 * Navigation document from Prismic
 *
 * - **API ID**: `navigation`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type NavigationDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<NavigationDocumentData>, "navigation", Lang>;
/** Content for Page documents */
interface PageDocumentData {
    /**
     * Title field in *Page*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: page.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Parent field in *Page*
     *
     * - **Field Type**: Content Relationship
     * - **Placeholder**: *None*
     * - **API ID Path**: page.parent
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    parent: prismicT.RelationField<"page">;
    /**
     * Slice Zone field in *Page*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: page.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<PageDocumentDataSlicesSlice>;
}
/**
 * Slice for *Page → Slice Zone*
 *
 */
type PageDocumentDataSlicesSlice = HeroSlice | LogoCloudSlice | SponsorGridSlice | ContentShowcaseSlice;
/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;
/** Content for Settings documents */
interface SettingsDocumentData {
    /**
     * Site Title field in *Settings*
     *
     * - **Field Type**: Title
     * - **Placeholder**: Title of the site
     * - **API ID Path**: settings.siteTitle
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    siteTitle: prismicT.TitleField;
}
/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<SettingsDocumentData>, "settings", Lang>;
export type AllDocumentTypes = NavigationDocument | PageDocument | SettingsDocument;
/**
 * Primary content in ContentShowcase → Primary
 *
 */
interface ContentShowcaseSliceDefaultPrimary {
    /**
     * Icon field in *ContentShowcase → Primary*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **Default Value**: document
     * - **API ID Path**: content_showcase.primary.icon
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    icon: prismicT.SelectField<"document" | "tools" | "content-delivery-network" | "network-4-reference" | "user-multiple" | "flash", "filled">;
    /**
     * Eyebrow field in *ContentShowcase → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: content_showcase.primary.eyebrow
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    eyebrow: prismicT.KeyTextField;
    /**
     * Heading field in *ContentShowcase → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: content_showcase.primary.heading
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    heading: prismicT.TitleField;
    /**
     * Body field in *ContentShowcase → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: content_showcase.primary.body
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    body: prismicT.RichTextField;
}
/**
 * Default variation for ContentShowcase Slice
 *
 * - **API ID**: `default`
 * - **Description**: `ContentShowcase`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContentShowcaseSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ContentShowcaseSliceDefaultPrimary>, never>;
/**
 * Slice variation for *ContentShowcase*
 *
 */
type ContentShowcaseSliceVariation = ContentShowcaseSliceDefault;
/**
 * ContentShowcase Shared Slice
 *
 * - **API ID**: `content_showcase`
 * - **Description**: `ContentShowcase`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContentShowcaseSlice = prismicT.SharedSlice<"content_showcase", ContentShowcaseSliceVariation>;
/**
 * Primary content in Hero → Primary
 *
 */
interface HeroSliceDefaultPrimary {
    /**
     * Eyebrow Badge Text field in *Hero → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.eyebrowBadge
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    eyebrowBadge: prismicT.KeyTextField;
    /**
     * Eyebrow URL field in *Hero → Primary*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.eyebrowURL
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    eyebrowURL: prismicT.LinkField;
    /**
     * Eyebrow Secondary Text field in *Hero → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.eyebrowSecondaryText
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    eyebrowSecondaryText: prismicT.KeyTextField;
    /**
     * Heading field in *Hero → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.heading
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    heading: prismicT.TitleField;
    /**
     * Body field in *Hero → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.body
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    body: prismicT.RichTextField;
    /**
     * Button Text field in *Hero → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.buttonText
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    buttonText: prismicT.KeyTextField;
    /**
     * Button Link field in *Hero → Primary*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.buttonLink
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    buttonLink: prismicT.LinkField;
}
/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<HeroSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Hero*
 *
 */
type HeroSliceVariation = HeroSliceDefault;
/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSlice = prismicT.SharedSlice<"hero", HeroSliceVariation>;
/**
 * Primary content in LogoCloud → Primary
 *
 */
interface LogoCloudSliceDefaultPrimary {
    /**
     * Heading field in *LogoCloud → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: logo_cloud.primary.heading
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    heading: prismicT.KeyTextField;
}
/**
 * Item in LogoCloud → Items
 *
 */
export interface LogoCloudSliceDefaultItem {
    /**
     * Company Logo field in *LogoCloud → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: logo_cloud.items[].companyLogo
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    companyLogo: prismicT.ImageField<never>;
}
/**
 * Default variation for LogoCloud Slice
 *
 * - **API ID**: `default`
 * - **Description**: `LogoCloud`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type LogoCloudSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<LogoCloudSliceDefaultPrimary>, Simplify<LogoCloudSliceDefaultItem>>;
/**
 * Slice variation for *LogoCloud*
 *
 */
type LogoCloudSliceVariation = LogoCloudSliceDefault;
/**
 * LogoCloud Shared Slice
 *
 * - **API ID**: `logo_cloud`
 * - **Description**: `LogoCloud`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type LogoCloudSlice = prismicT.SharedSlice<"logo_cloud", LogoCloudSliceVariation>;
/**
 * Primary content in SponsorGrid → Primary
 *
 */
interface SponsorGridSliceDefaultPrimary {
    /**
     * Top Copy field in *SponsorGrid → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: sponsor_grid.primary.topCopy
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    topCopy: prismicT.KeyTextField;
    /**
     * Bottom Copy field in *SponsorGrid → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: sponsor_grid.primary.bottomCopy
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    bottomCopy: prismicT.KeyTextField;
}
/**
 * Item in SponsorGrid → Items
 *
 */
export interface SponsorGridSliceDefaultItem {
    /**
     * Sponsor Link field in *SponsorGrid → Items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: sponsor_grid.items[].sponsorLink
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    sponsorLink: prismicT.LinkField;
    /**
     * Logo field in *SponsorGrid → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: sponsor_grid.items[].logo
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    logo: prismicT.ImageField<never>;
}
/**
 * Default variation for SponsorGrid Slice
 *
 * - **API ID**: `default`
 * - **Description**: `SponsorGrid`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type SponsorGridSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<SponsorGridSliceDefaultPrimary>, Simplify<SponsorGridSliceDefaultItem>>;
/**
 * Slice variation for *SponsorGrid*
 *
 */
type SponsorGridSliceVariation = SponsorGridSliceDefault;
/**
 * SponsorGrid Shared Slice
 *
 * - **API ID**: `sponsor_grid`
 * - **Description**: `SponsorGrid`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type SponsorGridSlice = prismicT.SharedSlice<"sponsor_grid", SponsorGridSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { NavigationDocumentData, NavigationDocumentDataLinksItem, NavigationDocument, PageDocumentData, PageDocumentDataSlicesSlice, PageDocument, SettingsDocumentData, SettingsDocument, AllDocumentTypes, ContentShowcaseSliceDefaultPrimary, ContentShowcaseSliceDefault, ContentShowcaseSliceVariation, ContentShowcaseSlice, HeroSliceDefaultPrimary, HeroSliceDefault, HeroSliceVariation, HeroSlice, LogoCloudSliceDefaultPrimary, LogoCloudSliceDefaultItem, LogoCloudSliceDefault, LogoCloudSliceVariation, LogoCloudSlice, SponsorGridSliceDefaultPrimary, SponsorGridSliceDefaultItem, SponsorGridSliceDefault, SponsorGridSliceVariation, SponsorGridSlice };
    }
}
